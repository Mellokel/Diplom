//
// VendorDistributionPointShowcasesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class VendorDistributionPointShowcasesAPI {
    /**

     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendorDistributionPointShowcase(vendorId: Int, pointId: Int, id: Int, completion: @escaping ((_ data: ShowcaseGetApiModel?,_ error: Error?) -> Void)) {
        getVendorDistributionPointShowcaseWithRequestBuilder(vendorId: vendorId, pointId: pointId, id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{id}
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example={
  "SupplierId" : 6,
  "ProductionOnly" : true,
  "ImageId" : "00000000-0000-0000-0000-000000000000",
  "RequireConsolidation" : true,
  "Id" : 0,
  "Name" : "Name"
}}]
     
     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter id: (path)  

     - returns: RequestBuilder<ShowcaseGetApiModel> 
     */
    open class func getVendorDistributionPointShowcaseWithRequestBuilder(vendorId: Int, pointId: Int, id: Int) -> RequestBuilder<ShowcaseGetApiModel> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{id}"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{pointId}", with: "\(pointId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ShowcaseGetApiModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendorDistributionPointShowcases(vendorId: Int, pointId: Int, completion: @escaping ((_ data: [ShowcaseGetApiModel]?,_ error: Error?) -> Void)) {
        getVendorDistributionPointShowcasesWithRequestBuilder(vendorId: vendorId, pointId: pointId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors/{vendorId}/distributionpoints/{pointId}/showcases
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example=[ {
  "SupplierId" : 6,
  "ProductionOnly" : true,
  "ImageId" : "00000000-0000-0000-0000-000000000000",
  "RequireConsolidation" : true,
  "Id" : 0,
  "Name" : "Name"
}, {
  "SupplierId" : 6,
  "ProductionOnly" : true,
  "ImageId" : "00000000-0000-0000-0000-000000000000",
  "RequireConsolidation" : true,
  "Id" : 0,
  "Name" : "Name"
} ]}]
     
     - parameter vendorId: (path)  
     - parameter pointId: (path)  

     - returns: RequestBuilder<[ShowcaseGetApiModel]> 
     */
    open class func getVendorDistributionPointShowcasesWithRequestBuilder(vendorId: Int, pointId: Int) -> RequestBuilder<[ShowcaseGetApiModel]> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{pointId}/showcases"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{pointId}", with: "\(pointId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[ShowcaseGetApiModel]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
