//
// VendorDistributionPointsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class VendorDistributionPointsAPI {
    /**

     - parameter vendorId: (path)  
     - parameter id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteVendorDistributionPoint(vendorId: Int, id: Int, completion: @escaping ((_ error: Error?) -> Void)) {
        deleteVendorDistributionPointWithRequestBuilder(vendorId: vendorId, id: id).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - DELETE /api/vendors/{vendorId}/distributionpoints/{id}
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     
     - parameter vendorId: (path)  
     - parameter id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func deleteVendorDistributionPointWithRequestBuilder(vendorId: Int, id: Int) -> RequestBuilder<Void> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{id}"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter vendorId: (path)  
     - parameter id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendorDistributionPoint(vendorId: Int, id: Int, completion: @escaping ((_ data: DistributionPointGetApiModel?,_ error: Error?) -> Void)) {
        getVendorDistributionPointWithRequestBuilder(vendorId: vendorId, id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors/{vendorId}/distributionpoints/{id}
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example={
  "StreetName" : "StreetName",
  "HouseNumber" : "HouseNumber",
  "CityId" : 1,
  "IsReported" : true,
  "Id" : 6,
  "LiablePersonPhone" : "LiablePersonPhone",
  "EmailAddress" : "EmailAddress"
}}]
     
     - parameter vendorId: (path)  
     - parameter id: (path)  

     - returns: RequestBuilder<DistributionPointGetApiModel> 
     */
    open class func getVendorDistributionPointWithRequestBuilder(vendorId: Int, id: Int) -> RequestBuilder<DistributionPointGetApiModel> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{id}"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<DistributionPointGetApiModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter vendorId: (path)  
     - parameter id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendorDistributionPointEtalons(vendorId: Int, id: Int, completion: @escaping ((_ data: [EtalonGetApiModel]?,_ error: Error?) -> Void)) {
        getVendorDistributionPointEtalonsWithRequestBuilder(vendorId: vendorId, id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors/{vendorId}/distributionpoints/{id}/etalons
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example=[ {
  "Options" : {
    "key" : "{}"
  },
  "ManufacturingMargin" : 5.962133916683182,
  "QuantityMinimum" : 9.301444243932576,
  "Description" : "Description",
  "OrderUnitId" : 7,
  "Article" : "Article",
  "StorageMargin" : 5.637376656633329,
  "CurrencyId" : 2,
  "Name" : "Name",
  "SupplierCategoryId" : 1,
  "QuantityMaximum" : 2.027123023002322,
  "ImageId" : "00000000-0000-0000-0000-000000000000",
  "QuantityStep" : 3.616076749251911,
  "Id" : 0,
  "Disabled" : true,
  "CommodityCategoryId" : 6
}, {
  "Options" : {
    "key" : "{}"
  },
  "ManufacturingMargin" : 5.962133916683182,
  "QuantityMinimum" : 9.301444243932576,
  "Description" : "Description",
  "OrderUnitId" : 7,
  "Article" : "Article",
  "StorageMargin" : 5.637376656633329,
  "CurrencyId" : 2,
  "Name" : "Name",
  "SupplierCategoryId" : 1,
  "QuantityMaximum" : 2.027123023002322,
  "ImageId" : "00000000-0000-0000-0000-000000000000",
  "QuantityStep" : 3.616076749251911,
  "Id" : 0,
  "Disabled" : true,
  "CommodityCategoryId" : 6
} ]}]
     
     - parameter vendorId: (path)  
     - parameter id: (path)  

     - returns: RequestBuilder<[EtalonGetApiModel]> 
     */
    open class func getVendorDistributionPointEtalonsWithRequestBuilder(vendorId: Int, id: Int) -> RequestBuilder<[EtalonGetApiModel]> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{id}/etalons"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[EtalonGetApiModel]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter vendorId: (path)  
     - parameter id: (path)  
     - parameter from: (query)  
     - parameter to: (query)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendorDistributionPointStatistics(vendorId: Int, id: Int, from: Date, to: Date, completion: @escaping ((_ data: DistributionPointStatisticsGetApiModel?,_ error: Error?) -> Void)) {
        getVendorDistributionPointStatisticsWithRequestBuilder(vendorId: vendorId, id: id, from: from, to: to).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors/{vendorId}/distributionpoints/{id}/statistics
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example={
  "Orders" : 1,
  "ServiceFee" : 2.3021358869347655,
  "ConversionRate" : 5.962133916683182,
  "Income" : 5.637376656633329,
  "Sellers" : [ {
    "Orders" : 9,
    "Income" : 3.616076749251911,
    "Id" : 7,
    "Name" : "Name"
  }, {
    "Orders" : 9,
    "Income" : 3.616076749251911,
    "Id" : 7,
    "Name" : "Name"
  } ],
  "Clients" : 6,
  "Requests" : 0
}}]
     
     - parameter vendorId: (path)  
     - parameter id: (path)  
     - parameter from: (query)  
     - parameter to: (query)  

     - returns: RequestBuilder<DistributionPointStatisticsGetApiModel> 
     */
    open class func getVendorDistributionPointStatisticsWithRequestBuilder(vendorId: Int, id: Int, from: Date, to: Date) -> RequestBuilder<DistributionPointStatisticsGetApiModel> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{id}/statistics"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "from": from.encodeToJSON(), 
            "to": to.encodeToJSON()
        ])
        

        let requestBuilder: RequestBuilder<DistributionPointStatisticsGetApiModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter vendorId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendorDistributionPoints(vendorId: Int, completion: @escaping ((_ data: [DistributionPointGetApiModel]?,_ error: Error?) -> Void)) {
        getVendorDistributionPointsWithRequestBuilder(vendorId: vendorId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors/{vendorId}/distributionpoints
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example=[ {
  "StreetName" : "StreetName",
  "HouseNumber" : "HouseNumber",
  "CityId" : 1,
  "IsReported" : true,
  "Id" : 6,
  "LiablePersonPhone" : "LiablePersonPhone",
  "EmailAddress" : "EmailAddress"
}, {
  "StreetName" : "StreetName",
  "HouseNumber" : "HouseNumber",
  "CityId" : 1,
  "IsReported" : true,
  "Id" : 6,
  "LiablePersonPhone" : "LiablePersonPhone",
  "EmailAddress" : "EmailAddress"
} ]}]
     
     - parameter vendorId: (path)  

     - returns: RequestBuilder<[DistributionPointGetApiModel]> 
     */
    open class func getVendorDistributionPointsWithRequestBuilder(vendorId: Int) -> RequestBuilder<[DistributionPointGetApiModel]> {
        var path = "/api/vendors/{vendorId}/distributionpoints"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[DistributionPointGetApiModel]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter vendorId: (path)  
     - parameter model: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postVendorDistributionPoint(vendorId: Int, model: DistributionPointEditApiModel, completion: @escaping ((_ data: DistributionPointGetApiModel?,_ error: Error?) -> Void)) {
        postVendorDistributionPointWithRequestBuilder(vendorId: vendorId, model: model).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /api/vendors/{vendorId}/distributionpoints
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example={
  "StreetName" : "StreetName",
  "HouseNumber" : "HouseNumber",
  "CityId" : 1,
  "IsReported" : true,
  "Id" : 6,
  "LiablePersonPhone" : "LiablePersonPhone",
  "EmailAddress" : "EmailAddress"
}}]
     
     - parameter vendorId: (path)  
     - parameter model: (body)  

     - returns: RequestBuilder<DistributionPointGetApiModel> 
     */
    open class func postVendorDistributionPointWithRequestBuilder(vendorId: Int, model: DistributionPointEditApiModel) -> RequestBuilder<DistributionPointGetApiModel> {
        var path = "/api/vendors/{vendorId}/distributionpoints"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<DistributionPointGetApiModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter vendorId: (path)  
     - parameter id: (path)  
     - parameter model: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putVendorDistributionPoint(vendorId: Int, id: Int, model: DistributionPointEditApiModel, completion: @escaping ((_ error: Error?) -> Void)) {
        putVendorDistributionPointWithRequestBuilder(vendorId: vendorId, id: id, model: model).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - PUT /api/vendors/{vendorId}/distributionpoints/{id}
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     
     - parameter vendorId: (path)  
     - parameter id: (path)  
     - parameter model: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func putVendorDistributionPointWithRequestBuilder(vendorId: Int, id: Int, model: DistributionPointEditApiModel) -> RequestBuilder<Void> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{id}"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter vendorId: (path)  
     - parameter id: (path)  
     - parameter model: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func resolveQRCode(vendorId: Int, id: Int, model: ResolveQRCodeRequestApiModel, completion: @escaping ((_ data: ResolveQRCodeResponseApiModel?,_ error: Error?) -> Void)) {
        resolveQRCodeWithRequestBuilder(vendorId: vendorId, id: id, model: model).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /api/vendors/{vendorId}/distributionpoints/{id}/resolveqr
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example={
  "EtalonId" : 0,
  "Success" : true
}}]
     
     - parameter vendorId: (path)  
     - parameter id: (path)  
     - parameter model: (body)  

     - returns: RequestBuilder<ResolveQRCodeResponseApiModel> 
     */
    open class func resolveQRCodeWithRequestBuilder(vendorId: Int, id: Int, model: ResolveQRCodeRequestApiModel) -> RequestBuilder<ResolveQRCodeResponseApiModel> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{id}/resolveqr"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ResolveQRCodeResponseApiModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
