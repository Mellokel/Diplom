//
// VendorDistributionPointShowcaseEtalonsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class VendorDistributionPointShowcaseEtalonsAPI {
    /**

     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter showcaseId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendorDistributionPointShowcaseAllEtalons(vendorId: Int, pointId: Int, showcaseId: Int, completion: @escaping ((_ data: [ShowcaseEtalonGetApiModel]?,_ error: Error?) -> Void)) {
        getVendorDistributionPointShowcaseAllEtalonsWithRequestBuilder(vendorId: vendorId, pointId: pointId, showcaseId: showcaseId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{showcaseId}/etalons/all
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example=[ {
  "Etalon" : {
    "Options" : {
      "key" : "{}"
    },
    "ManufacturingMargin" : 5.962133916683182,
    "QuantityMinimum" : 9.301444243932576,
    "Description" : "Description",
    "OrderUnitId" : 7,
    "Article" : "Article",
    "StorageMargin" : 5.637376656633329,
    "CurrencyId" : 2,
    "Name" : "Name",
    "SupplierCategoryId" : 1,
    "QuantityMaximum" : 2.027123023002322,
    "ImageId" : "00000000-0000-0000-0000-000000000000",
    "QuantityStep" : 3.616076749251911,
    "Id" : 0,
    "Disabled" : true,
    "CommodityCategoryId" : 6
  },
  "QRCodeImageId" : "00000000-0000-0000-0000-000000000000",
  "Enabled" : true
}, {
  "Etalon" : {
    "Options" : {
      "key" : "{}"
    },
    "ManufacturingMargin" : 5.962133916683182,
    "QuantityMinimum" : 9.301444243932576,
    "Description" : "Description",
    "OrderUnitId" : 7,
    "Article" : "Article",
    "StorageMargin" : 5.637376656633329,
    "CurrencyId" : 2,
    "Name" : "Name",
    "SupplierCategoryId" : 1,
    "QuantityMaximum" : 2.027123023002322,
    "ImageId" : "00000000-0000-0000-0000-000000000000",
    "QuantityStep" : 3.616076749251911,
    "Id" : 0,
    "Disabled" : true,
    "CommodityCategoryId" : 6
  },
  "QRCodeImageId" : "00000000-0000-0000-0000-000000000000",
  "Enabled" : true
} ]}]
     
     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter showcaseId: (path)  

     - returns: RequestBuilder<[ShowcaseEtalonGetApiModel]> 
     */
    open class func getVendorDistributionPointShowcaseAllEtalonsWithRequestBuilder(vendorId: Int, pointId: Int, showcaseId: Int) -> RequestBuilder<[ShowcaseEtalonGetApiModel]> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{showcaseId}/etalons/all"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{pointId}", with: "\(pointId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{showcaseId}", with: "\(showcaseId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[ShowcaseEtalonGetApiModel]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter showcaseId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendorDistributionPointShowcaseDetailedEtalons(vendorId: Int, pointId: Int, showcaseId: Int, completion: @escaping ((_ data: [EtalonWithVariationsAndPricesGetApiModel]?,_ error: Error?) -> Void)) {
        getVendorDistributionPointShowcaseDetailedEtalonsWithRequestBuilder(vendorId: vendorId, pointId: pointId, showcaseId: showcaseId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{showcaseId}/etalons/detailed
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example=[ {
  "Options" : {
    "key" : "{}"
  },
  "ManufacturingMargin" : 7.061401241503109,
  "QuantityMinimum" : 4.145608029883936,
  "Description" : "Description",
  "OrderUnitId" : 2,
  "Article" : "Article",
  "Variations" : [ {
    "Options" : {
      "key" : "{}"
    },
    "PriceOptions" : [ {
      "Duration" : "Duration",
      "Hash" : "Hash",
      "CustomerPrice" : 0.8008281904610115
    }, {
      "Duration" : "Duration",
      "Hash" : "Hash",
      "CustomerPrice" : 0.8008281904610115
    } ],
    "Description" : "Description",
    "Price" : 1.4658129805029452,
    "Production" : true,
    "InnerId" : "InnerId",
    "Id" : 6,
    "DateAdded" : "2000-01-23T04:56:07.000+00:00",
    "Reserved" : true
  }, {
    "Options" : {
      "key" : "{}"
    },
    "PriceOptions" : [ {
      "Duration" : "Duration",
      "Hash" : "Hash",
      "CustomerPrice" : 0.8008281904610115
    }, {
      "Duration" : "Duration",
      "Hash" : "Hash",
      "CustomerPrice" : 0.8008281904610115
    } ],
    "Description" : "Description",
    "Price" : 1.4658129805029452,
    "Production" : true,
    "InnerId" : "InnerId",
    "Id" : 6,
    "DateAdded" : "2000-01-23T04:56:07.000+00:00",
    "Reserved" : true
  } ],
  "StorageMargin" : 9.301444243932576,
  "CurrencyId" : 3,
  "Name" : "Name",
  "SupplierCategoryId" : 2,
  "QuantityMaximum" : 1.2315135367772556,
  "ImageId" : "00000000-0000-0000-0000-000000000000",
  "QuantityStep" : 7.386281948385884,
  "Id" : 5,
  "Disabled" : true,
  "CommodityCategoryId" : 5
}, {
  "Options" : {
    "key" : "{}"
  },
  "ManufacturingMargin" : 7.061401241503109,
  "QuantityMinimum" : 4.145608029883936,
  "Description" : "Description",
  "OrderUnitId" : 2,
  "Article" : "Article",
  "Variations" : [ {
    "Options" : {
      "key" : "{}"
    },
    "PriceOptions" : [ {
      "Duration" : "Duration",
      "Hash" : "Hash",
      "CustomerPrice" : 0.8008281904610115
    }, {
      "Duration" : "Duration",
      "Hash" : "Hash",
      "CustomerPrice" : 0.8008281904610115
    } ],
    "Description" : "Description",
    "Price" : 1.4658129805029452,
    "Production" : true,
    "InnerId" : "InnerId",
    "Id" : 6,
    "DateAdded" : "2000-01-23T04:56:07.000+00:00",
    "Reserved" : true
  }, {
    "Options" : {
      "key" : "{}"
    },
    "PriceOptions" : [ {
      "Duration" : "Duration",
      "Hash" : "Hash",
      "CustomerPrice" : 0.8008281904610115
    }, {
      "Duration" : "Duration",
      "Hash" : "Hash",
      "CustomerPrice" : 0.8008281904610115
    } ],
    "Description" : "Description",
    "Price" : 1.4658129805029452,
    "Production" : true,
    "InnerId" : "InnerId",
    "Id" : 6,
    "DateAdded" : "2000-01-23T04:56:07.000+00:00",
    "Reserved" : true
  } ],
  "StorageMargin" : 9.301444243932576,
  "CurrencyId" : 3,
  "Name" : "Name",
  "SupplierCategoryId" : 2,
  "QuantityMaximum" : 1.2315135367772556,
  "ImageId" : "00000000-0000-0000-0000-000000000000",
  "QuantityStep" : 7.386281948385884,
  "Id" : 5,
  "Disabled" : true,
  "CommodityCategoryId" : 5
} ]}]
     
     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter showcaseId: (path)  

     - returns: RequestBuilder<[EtalonWithVariationsAndPricesGetApiModel]> 
     */
    open class func getVendorDistributionPointShowcaseDetailedEtalonsWithRequestBuilder(vendorId: Int, pointId: Int, showcaseId: Int) -> RequestBuilder<[EtalonWithVariationsAndPricesGetApiModel]> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{showcaseId}/etalons/detailed"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{pointId}", with: "\(pointId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{showcaseId}", with: "\(showcaseId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[EtalonWithVariationsAndPricesGetApiModel]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter showcaseId: (path)  
     - parameter id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendorDistributionPointShowcaseEtalon(vendorId: Int, pointId: Int, showcaseId: Int, id: Int, completion: @escaping ((_ data: ShowcaseEtalonGetApiModel?,_ error: Error?) -> Void)) {
        getVendorDistributionPointShowcaseEtalonWithRequestBuilder(vendorId: vendorId, pointId: pointId, showcaseId: showcaseId, id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{showcaseId}/etalons/{id}
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example={
  "Etalon" : {
    "Options" : {
      "key" : "{}"
    },
    "ManufacturingMargin" : 5.962133916683182,
    "QuantityMinimum" : 9.301444243932576,
    "Description" : "Description",
    "OrderUnitId" : 7,
    "Article" : "Article",
    "StorageMargin" : 5.637376656633329,
    "CurrencyId" : 2,
    "Name" : "Name",
    "SupplierCategoryId" : 1,
    "QuantityMaximum" : 2.027123023002322,
    "ImageId" : "00000000-0000-0000-0000-000000000000",
    "QuantityStep" : 3.616076749251911,
    "Id" : 0,
    "Disabled" : true,
    "CommodityCategoryId" : 6
  },
  "QRCodeImageId" : "00000000-0000-0000-0000-000000000000",
  "Enabled" : true
}}]
     
     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter showcaseId: (path)  
     - parameter id: (path)  

     - returns: RequestBuilder<ShowcaseEtalonGetApiModel> 
     */
    open class func getVendorDistributionPointShowcaseEtalonWithRequestBuilder(vendorId: Int, pointId: Int, showcaseId: Int, id: Int) -> RequestBuilder<ShowcaseEtalonGetApiModel> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{showcaseId}/etalons/{id}"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{pointId}", with: "\(pointId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{showcaseId}", with: "\(showcaseId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ShowcaseEtalonGetApiModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter showcaseId: (path)  
     - parameter id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendorDistributionPointShowcaseEtalonSet(vendorId: Int, pointId: Int, showcaseId: Int, id: Int, completion: @escaping ((_ data: VendorEtalonSetApiGetModel?,_ error: Error?) -> Void)) {
        getVendorDistributionPointShowcaseEtalonSetWithRequestBuilder(vendorId: vendorId, pointId: pointId, showcaseId: showcaseId, id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{showcaseId}/etalons/{id}/set
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example={
  "Etalons" : [ 6, 6 ],
  "Id" : 0,
  "Name" : "Name"
}}]
     
     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter showcaseId: (path)  
     - parameter id: (path)  

     - returns: RequestBuilder<VendorEtalonSetApiGetModel> 
     */
    open class func getVendorDistributionPointShowcaseEtalonSetWithRequestBuilder(vendorId: Int, pointId: Int, showcaseId: Int, id: Int) -> RequestBuilder<VendorEtalonSetApiGetModel> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{showcaseId}/etalons/{id}/set"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{pointId}", with: "\(pointId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{showcaseId}", with: "\(showcaseId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<VendorEtalonSetApiGetModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter showcaseId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendorDistributionPointShowcaseEtalons(vendorId: Int, pointId: Int, showcaseId: Int, completion: @escaping ((_ data: [ShowcaseEtalonGetApiModel]?,_ error: Error?) -> Void)) {
        getVendorDistributionPointShowcaseEtalonsWithRequestBuilder(vendorId: vendorId, pointId: pointId, showcaseId: showcaseId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{showcaseId}/etalons
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example=[ {
  "Etalon" : {
    "Options" : {
      "key" : "{}"
    },
    "ManufacturingMargin" : 5.962133916683182,
    "QuantityMinimum" : 9.301444243932576,
    "Description" : "Description",
    "OrderUnitId" : 7,
    "Article" : "Article",
    "StorageMargin" : 5.637376656633329,
    "CurrencyId" : 2,
    "Name" : "Name",
    "SupplierCategoryId" : 1,
    "QuantityMaximum" : 2.027123023002322,
    "ImageId" : "00000000-0000-0000-0000-000000000000",
    "QuantityStep" : 3.616076749251911,
    "Id" : 0,
    "Disabled" : true,
    "CommodityCategoryId" : 6
  },
  "QRCodeImageId" : "00000000-0000-0000-0000-000000000000",
  "Enabled" : true
}, {
  "Etalon" : {
    "Options" : {
      "key" : "{}"
    },
    "ManufacturingMargin" : 5.962133916683182,
    "QuantityMinimum" : 9.301444243932576,
    "Description" : "Description",
    "OrderUnitId" : 7,
    "Article" : "Article",
    "StorageMargin" : 5.637376656633329,
    "CurrencyId" : 2,
    "Name" : "Name",
    "SupplierCategoryId" : 1,
    "QuantityMaximum" : 2.027123023002322,
    "ImageId" : "00000000-0000-0000-0000-000000000000",
    "QuantityStep" : 3.616076749251911,
    "Id" : 0,
    "Disabled" : true,
    "CommodityCategoryId" : 6
  },
  "QRCodeImageId" : "00000000-0000-0000-0000-000000000000",
  "Enabled" : true
} ]}]
     
     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter showcaseId: (path)  

     - returns: RequestBuilder<[ShowcaseEtalonGetApiModel]> 
     */
    open class func getVendorDistributionPointShowcaseEtalonsWithRequestBuilder(vendorId: Int, pointId: Int, showcaseId: Int) -> RequestBuilder<[ShowcaseEtalonGetApiModel]> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{showcaseId}/etalons"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{pointId}", with: "\(pointId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{showcaseId}", with: "\(showcaseId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[ShowcaseEtalonGetApiModel]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter showcaseId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWithVariations(vendorId: Int, pointId: Int, showcaseId: Int, completion: @escaping ((_ data: [EtalonWithVariationsGetApiModel]?,_ error: Error?) -> Void)) {
        getWithVariationsWithRequestBuilder(vendorId: vendorId, pointId: pointId, showcaseId: showcaseId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{showcaseId}/etalons/withvariations
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example=[ {
  "Options" : {
    "key" : "{}"
  },
  "ManufacturingMargin" : 5.962133916683182,
  "QuantityMinimum" : 9.301444243932576,
  "Description" : "Description",
  "OrderUnitId" : 7,
  "Article" : "Article",
  "Variations" : [ {
    "Options" : {
      "key" : "{}"
    },
    "Description" : "Description",
    "Price" : 6.027456183070403,
    "Production" : true,
    "InnerId" : "InnerId",
    "Id" : 0,
    "DateAdded" : "2000-01-23T04:56:07.000+00:00",
    "Reserved" : true
  }, {
    "Options" : {
      "key" : "{}"
    },
    "Description" : "Description",
    "Price" : 6.027456183070403,
    "Production" : true,
    "InnerId" : "InnerId",
    "Id" : 0,
    "DateAdded" : "2000-01-23T04:56:07.000+00:00",
    "Reserved" : true
  } ],
  "StorageMargin" : 5.637376656633329,
  "CurrencyId" : 2,
  "Name" : "Name",
  "SupplierCategoryId" : 1,
  "QuantityMaximum" : 2.027123023002322,
  "ImageId" : "00000000-0000-0000-0000-000000000000",
  "QuantityStep" : 3.616076749251911,
  "Id" : 0,
  "Disabled" : true,
  "CommodityCategoryId" : 6
}, {
  "Options" : {
    "key" : "{}"
  },
  "ManufacturingMargin" : 5.962133916683182,
  "QuantityMinimum" : 9.301444243932576,
  "Description" : "Description",
  "OrderUnitId" : 7,
  "Article" : "Article",
  "Variations" : [ {
    "Options" : {
      "key" : "{}"
    },
    "Description" : "Description",
    "Price" : 6.027456183070403,
    "Production" : true,
    "InnerId" : "InnerId",
    "Id" : 0,
    "DateAdded" : "2000-01-23T04:56:07.000+00:00",
    "Reserved" : true
  }, {
    "Options" : {
      "key" : "{}"
    },
    "Description" : "Description",
    "Price" : 6.027456183070403,
    "Production" : true,
    "InnerId" : "InnerId",
    "Id" : 0,
    "DateAdded" : "2000-01-23T04:56:07.000+00:00",
    "Reserved" : true
  } ],
  "StorageMargin" : 5.637376656633329,
  "CurrencyId" : 2,
  "Name" : "Name",
  "SupplierCategoryId" : 1,
  "QuantityMaximum" : 2.027123023002322,
  "ImageId" : "00000000-0000-0000-0000-000000000000",
  "QuantityStep" : 3.616076749251911,
  "Id" : 0,
  "Disabled" : true,
  "CommodityCategoryId" : 6
} ]}]
     
     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter showcaseId: (path)  

     - returns: RequestBuilder<[EtalonWithVariationsGetApiModel]> 
     */
    open class func getWithVariationsWithRequestBuilder(vendorId: Int, pointId: Int, showcaseId: Int) -> RequestBuilder<[EtalonWithVariationsGetApiModel]> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{showcaseId}/etalons/withvariations"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{pointId}", with: "\(pointId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{showcaseId}", with: "\(showcaseId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[EtalonWithVariationsGetApiModel]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
    /**

     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter showcaseId: (path)  
     - parameter model: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
   /* open class func postVendorDistributionPointShowcaseCalculatePrice(vendorId: Int, pointId: Int, showcaseId: Int, model: ComplexPriceCalculationRequestApiModel, completion: @escaping ((_ data: EtalonVariationConsolidatedPriceApiModel?,_ error: Error?) -> Void)) {
        postVendorDistributionPointShowcaseCalculatePriceWithRequestBuilder(vendorId: vendorId, pointId: pointId, showcaseId: showcaseId, model: model).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{showcaseId}/etalons/calculateprice
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example={
  "StartingDate" : "2000-01-23T04:56:07.000+00:00",
  "Options" : [ {
    "ConsolidationPrice" : 6.027456183070403,
    "Duration" : "Duration",
    "Id" : "Id",
    "Entries" : [ {
      "Price" : 7.061401241503109,
      "VariationId" : 5,
      "Quantity" : 2.3021358869347655,
      "PricePerUnit" : 5.637376656633329,
      "Tags" : "Tags"
    }, {
      "Price" : 7.061401241503109,
      "VariationId" : 5,
      "Quantity" : 2.3021358869347655,
      "PricePerUnit" : 5.637376656633329,
      "Tags" : "Tags"
    } ],
    "Hash" : "Hash",
    "CompletionDate" : "2000-01-23T04:56:07.000+00:00",
    "CustomerPrice" : 1.4658129805029452,
    "Tags" : "Tags"
  }, {
    "ConsolidationPrice" : 6.027456183070403,
    "Duration" : "Duration",
    "Id" : "Id",
    "Entries" : [ {
      "Price" : 7.061401241503109,
      "VariationId" : 5,
      "Quantity" : 2.3021358869347655,
      "PricePerUnit" : 5.637376656633329,
      "Tags" : "Tags"
    }, {
      "Price" : 7.061401241503109,
      "VariationId" : 5,
      "Quantity" : 2.3021358869347655,
      "PricePerUnit" : 5.637376656633329,
      "Tags" : "Tags"
    } ],
    "Hash" : "Hash",
    "CompletionDate" : "2000-01-23T04:56:07.000+00:00",
    "CustomerPrice" : 1.4658129805029452,
    "Tags" : "Tags"
  } ],
  "CalculationTime" : 0.8008281904610115,
  "CalculationPrecision" : "CalculationPrecision"
}}]
     
     - parameter vendorId: (path)  
     - parameter pointId: (path)  
     - parameter showcaseId: (path)  
     - parameter model: (body)  

     - returns: RequestBuilder<EtalonVariationConsolidatedPriceApiModel> 
     */
    open class func postVendorDistributionPointShowcaseCalculatePriceWithRequestBuilder(vendorId: Int, pointId: Int, showcaseId: Int, model: ComplexPriceCalculationRequestApiModel) -> RequestBuilder<EtalonVariationConsolidatedPriceApiModel> {
        var path = "/api/vendors/{vendorId}/distributionpoints/{pointId}/showcases/{showcaseId}/etalons/calculateprice"
        path = path.replacingOccurrences(of: "{vendorId}", with: "\(vendorId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{pointId}", with: "\(pointId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{showcaseId}", with: "\(showcaseId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<EtalonVariationConsolidatedPriceApiModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
*/
