//
// VendorsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class VendorsAPI {
    /**

     - parameter id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendor(id: Int, completion: @escaping ((_ data: VendorGetApiModel?,_ error: Error?) -> Void)) {
        getVendorWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors/{id}
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example={
  "CompanyName" : "CompanyName",
  "LogoId" : "00000000-0000-0000-0000-000000000000",
  "Id" : 0
}}]
     
     - parameter id: (path)  

     - returns: RequestBuilder<VendorGetApiModel> 
     */
    open class func getVendorWithRequestBuilder(id: Int) -> RequestBuilder<VendorGetApiModel> {
        var path = "/api/vendors/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<VendorGetApiModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendorOffer(id: Int, completion: @escaping ((_ data: VendorGetOfferApiModel?,_ error: Error?) -> Void)) {
        getVendorOfferWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors/{id}/offer
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example={
  "OfferText" : "OfferText"
}}]
     
     - parameter id: (path)  

     - returns: RequestBuilder<VendorGetOfferApiModel> 
     */
    open class func getVendorOfferWithRequestBuilder(id: Int) -> RequestBuilder<VendorGetOfferApiModel> {
        var path = "/api/vendors/{id}/offer"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<VendorGetOfferApiModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVendors(completion: @escaping ((_ data: [VendorGetApiModel]?,_ error: Error?) -> Void)) {
        getVendorsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/vendors
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example=[ {
  "CompanyName" : "CompanyName",
  "LogoId" : "00000000-0000-0000-0000-000000000000",
  "Id" : 0
}, {
  "CompanyName" : "CompanyName",
  "LogoId" : "00000000-0000-0000-0000-000000000000",
  "Id" : 0
} ]}]

     - returns: RequestBuilder<[VendorGetApiModel]> 
     */
    open class func getVendorsWithRequestBuilder() -> RequestBuilder<[VendorGetApiModel]> {
        let path = "/api/vendors"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[VendorGetApiModel]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
