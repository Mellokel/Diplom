//
// SharedServiceFeesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class SharedServiceFeesAPI {
    /**

     - parameter id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteServiceFee(id: Int, completion: @escaping ((_ error: Error?) -> Void)) {
        deleteServiceFeeWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - DELETE /api/shared/servicefees/{id}
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     
     - parameter id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func deleteServiceFeeWithRequestBuilder(id: Int) -> RequestBuilder<Void> {
        var path = "/api/shared/servicefees/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceFee(id: Int, completion: @escaping ((_ data: ServiceFee?,_ error: Error?) -> Void)) {
        getServiceFeeWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/shared/servicefees/{id}
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example={
  "Percentage" : 1.4658129805029452,
  "MaximumValue" : 5.637376656633329,
  "Id" : 6,
  "MinimumValue" : 5.962133916683182,
  "Name" : "Name"
}}]
     
     - parameter id: (path)  

     - returns: RequestBuilder<ServiceFee> 
     */
    open class func getServiceFeeWithRequestBuilder(id: Int) -> RequestBuilder<ServiceFee> {
        var path = "/api/shared/servicefees/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ServiceFee>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceFees(completion: @escaping ((_ data: [ServiceFee]?,_ error: Error?) -> Void)) {
        getServiceFeesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/shared/servicefees
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example=[ {
  "Percentage" : 1.4658129805029452,
  "MaximumValue" : 5.637376656633329,
  "Id" : 6,
  "MinimumValue" : 5.962133916683182,
  "Name" : "Name"
}, {
  "Percentage" : 1.4658129805029452,
  "MaximumValue" : 5.637376656633329,
  "Id" : 6,
  "MinimumValue" : 5.962133916683182,
  "Name" : "Name"
} ]}]

     - returns: RequestBuilder<[ServiceFee]> 
     */
    open class func getServiceFeesWithRequestBuilder() -> RequestBuilder<[ServiceFee]> {
        let path = "/api/shared/servicefees"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[ServiceFee]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter model: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postServiceFee(model: ServiceFee, completion: @escaping ((_ data: ServiceFee?,_ error: Error?) -> Void)) {
        postServiceFeeWithRequestBuilder(model: model).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /api/shared/servicefees
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example={
  "Percentage" : 1.4658129805029452,
  "MaximumValue" : 5.637376656633329,
  "Id" : 6,
  "MinimumValue" : 5.962133916683182,
  "Name" : "Name"
}}]
     
     - parameter model: (body)  

     - returns: RequestBuilder<ServiceFee> 
     */
    open class func postServiceFeeWithRequestBuilder(model: ServiceFee) -> RequestBuilder<ServiceFee> {
        let path = "/api/shared/servicefees"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ServiceFee>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter id: (path)  
     - parameter model: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putServiceFee(id: Int, model: ServiceFee, completion: @escaping ((_ error: Error?) -> Void)) {
        putServiceFeeWithRequestBuilder(id: id, model: model).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - PUT /api/shared/servicefees/{id}
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     
     - parameter id: (path)  
     - parameter model: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func putServiceFeeWithRequestBuilder(id: Int, model: ServiceFee) -> RequestBuilder<Void> {
        var path = "/api/shared/servicefees/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
