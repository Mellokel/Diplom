//
// UploadAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class UploadAPI {
    /**

     - parameter id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getImage(id: UUID, completion: @escaping ((_ data: UploadedImageGetApiModel?,_ error: Error?) -> Void)) {
        getImageWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/upload/image/{id}
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example={
  "Configuration" : "Configuration",
  "ConfigurationVersion" : 0,
  "Variations" : [ {
    "Extension" : "Extension",
    "Path" : "Path",
    "Id" : "Id"
  }, {
    "Extension" : "Extension",
    "Path" : "Path",
    "Id" : "Id"
  } ],
  "Id" : "00000000-0000-0000-0000-000000000000",
  "OriginalName" : "OriginalName"
}}]
     
     - parameter id: (path)  

     - returns: RequestBuilder<UploadedImageGetApiModel> 
     */
    open class func getImageWithRequestBuilder(id: UUID) -> RequestBuilder<UploadedImageGetApiModel> {
        var path = "/api/upload/image/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<UploadedImageGetApiModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter configuration: (query)  
     - parameter imageName: (query)  
     - parameter file: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postImage(configuration: String, imageName: String, file: Data, completion: @escaping ((_ data: UploadedImageGetApiModel?,_ error: Error?) -> Void)) {
        postImageWithRequestBuilder(configuration: configuration, imageName: imageName, file: file).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /api/upload/image
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example={
  "Configuration" : "Configuration",
  "ConfigurationVersion" : 0,
  "Variations" : [ {
    "Extension" : "Extension",
    "Path" : "Path",
    "Id" : "Id"
  }, {
    "Extension" : "Extension",
    "Path" : "Path",
    "Id" : "Id"
  } ],
  "Id" : "00000000-0000-0000-0000-000000000000",
  "OriginalName" : "OriginalName"
}}]
     
     - parameter configuration: (query)  
     - parameter imageName: (query)  
     - parameter file: (body)  

     - returns: RequestBuilder<UploadedImageGetApiModel> 
     */
    open class func postImageWithRequestBuilder(configuration: String, imageName: String, file: Data) -> RequestBuilder<UploadedImageGetApiModel> {
        let path = "/api/upload/image"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: file)

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "configuration": configuration, 
            "imageName": imageName
        ])
        

        let requestBuilder: RequestBuilder<UploadedImageGetApiModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter model: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postResolveImage(model: UploadImageResolveApiModel, completion: @escaping ((_ data: [UploadedImageGetApiModel]?,_ error: Error?) -> Void)) {
        postResolveImageWithRequestBuilder(model: model).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /api/upload/image/resolve
     - OAuth:
       - type: oauth2
       - name: tokenAuth
     - examples: [{contentType=application/json, example=[ {
  "Configuration" : "Configuration",
  "ConfigurationVersion" : 0,
  "Variations" : [ {
    "Extension" : "Extension",
    "Path" : "Path",
    "Id" : "Id"
  }, {
    "Extension" : "Extension",
    "Path" : "Path",
    "Id" : "Id"
  } ],
  "Id" : "00000000-0000-0000-0000-000000000000",
  "OriginalName" : "OriginalName"
}, {
  "Configuration" : "Configuration",
  "ConfigurationVersion" : 0,
  "Variations" : [ {
    "Extension" : "Extension",
    "Path" : "Path",
    "Id" : "Id"
  }, {
    "Extension" : "Extension",
    "Path" : "Path",
    "Id" : "Id"
  } ],
  "Id" : "00000000-0000-0000-0000-000000000000",
  "OriginalName" : "OriginalName"
} ]}]
     
     - parameter model: (body)  

     - returns: RequestBuilder<[UploadedImageGetApiModel]> 
     */
    open class func postResolveImageWithRequestBuilder(model: UploadImageResolveApiModel) -> RequestBuilder<[UploadedImageGetApiModel]> {
        let path = "/api/upload/image/resolve"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[UploadedImageGetApiModel]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
