//
// SellerGetApiModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class SellerGetApiModel: Codable {

    public var id: Int?
    public var lastName: String?
    public var firstName: String?
    public var fatherName: String?
    public var shortName: String?
    public var fullName: String?


    
    public init(id: Int?, lastName: String?, firstName: String?, fatherName: String?, shortName: String?, fullName: String?) {
        self.id = id
        self.lastName = lastName
        self.firstName = firstName
        self.fatherName = fatherName
        self.shortName = shortName
        self.fullName = fullName
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(id, forKey: "Id")
        try container.encodeIfPresent(lastName, forKey: "LastName")
        try container.encodeIfPresent(firstName, forKey: "FirstName")
        try container.encodeIfPresent(fatherName, forKey: "FatherName")
        try container.encodeIfPresent(shortName, forKey: "ShortName")
        try container.encodeIfPresent(fullName, forKey: "FullName")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        id = try container.decodeIfPresent(Int.self, forKey: "Id")
        lastName = try container.decodeIfPresent(String.self, forKey: "LastName")
        firstName = try container.decodeIfPresent(String.self, forKey: "FirstName")
        fatherName = try container.decodeIfPresent(String.self, forKey: "FatherName")
        shortName = try container.decodeIfPresent(String.self, forKey: "ShortName")
        fullName = try container.decodeIfPresent(String.self, forKey: "FullName")
    }
}

