//
// EtalonVariationPriceOptionApiModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class EtalonVariationPriceOptionApiModel: Codable {

    public var id: String?
    public var hash: String?
    public var customerPrice: Double?
    public var duration: String?
    public var completionDate: String?
    public var tags: String?


    
    public init(id: String?, hash: String?, customerPrice: Double?, duration: String?, completionDate: String?, tags: String?) {
        self.id = id
        self.hash = hash
        self.customerPrice = customerPrice
        self.duration = duration
        self.completionDate = completionDate
        self.tags = tags
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(id, forKey: "Id")
        try container.encodeIfPresent(hash, forKey: "Hash")
        try container.encodeIfPresent(customerPrice, forKey: "CustomerPrice")
        try container.encodeIfPresent(duration, forKey: "Duration")
        try container.encodeIfPresent(completionDate, forKey: "CompletionDate")
        try container.encodeIfPresent(tags, forKey: "Tags")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        id = try container.decodeIfPresent(String.self, forKey: "Id")
        hash = try container.decodeIfPresent(String.self, forKey: "Hash")
        customerPrice = try container.decodeIfPresent(Double.self, forKey: "CustomerPrice")
        duration = try container.decodeIfPresent(String.self, forKey: "Duration")
        completionDate = try container.decodeIfPresent(String.self, forKey: "CompletionDate")
        tags = try container.decodeIfPresent(String.self, forKey: "Tags")
    }
}

