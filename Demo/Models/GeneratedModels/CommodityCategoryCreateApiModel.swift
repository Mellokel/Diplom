//
// CommodityCategoryCreateApiModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class CommodityCategoryCreateApiModel: Codable {

    public var parentId: Int?
    public var name: String?
    public var nameSingular: String?
    public var serviceFeeId: Int?
    public var fields: [CommodityCategoryFieldEditApiModel]?


    
    public init(parentId: Int?, name: String?, nameSingular: String?, serviceFeeId: Int?, fields: [CommodityCategoryFieldEditApiModel]?) {
        self.parentId = parentId
        self.name = name
        self.nameSingular = nameSingular
        self.serviceFeeId = serviceFeeId
        self.fields = fields
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(parentId, forKey: "ParentId")
        try container.encodeIfPresent(name, forKey: "Name")
        try container.encodeIfPresent(nameSingular, forKey: "NameSingular")
        try container.encodeIfPresent(serviceFeeId, forKey: "ServiceFeeId")
        try container.encodeIfPresent(fields, forKey: "Fields")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        parentId = try container.decodeIfPresent(Int.self, forKey: "ParentId")
        name = try container.decodeIfPresent(String.self, forKey: "Name")
        nameSingular = try container.decodeIfPresent(String.self, forKey: "NameSingular")
        serviceFeeId = try container.decodeIfPresent(Int.self, forKey: "ServiceFeeId")
        fields = try container.decodeIfPresent([CommodityCategoryFieldEditApiModel].self, forKey: "Fields")
    }
}

