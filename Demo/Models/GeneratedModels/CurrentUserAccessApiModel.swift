//
// CurrentUserAccessApiModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class CurrentUserAccessApiModel: Codable {

    public var administrator: CurrentUserAdministratorAccessApiModel?
    public var supplier: CurrentUserSupplierAccessApiModel?
    public var supplierUser: CurrentUserSupplierAccessApiModel?
    public var vendor: CurrentUserVendorAccessApiModel?
    public var terminal: CurrentUserTerminalAccessApiModel?


    
    public init(administrator: CurrentUserAdministratorAccessApiModel?, supplier: CurrentUserSupplierAccessApiModel?, supplierUser: CurrentUserSupplierAccessApiModel?, vendor: CurrentUserVendorAccessApiModel?, terminal: CurrentUserTerminalAccessApiModel?) {
        self.administrator = administrator
        self.supplier = supplier
        self.supplierUser = supplierUser
        self.vendor = vendor
        self.terminal = terminal
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(administrator, forKey: "Administrator")
        try container.encodeIfPresent(supplier, forKey: "Supplier")
        try container.encodeIfPresent(supplierUser, forKey: "SupplierUser")
        try container.encodeIfPresent(vendor, forKey: "Vendor")
        try container.encodeIfPresent(terminal, forKey: "Terminal")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        administrator = try container.decodeIfPresent(CurrentUserAdministratorAccessApiModel.self, forKey: "Administrator")
        supplier = try container.decodeIfPresent(CurrentUserSupplierAccessApiModel.self, forKey: "Supplier")
        supplierUser = try container.decodeIfPresent(CurrentUserSupplierAccessApiModel.self, forKey: "SupplierUser")
        vendor = try container.decodeIfPresent(CurrentUserVendorAccessApiModel.self, forKey: "Vendor")
        terminal = try container.decodeIfPresent(CurrentUserTerminalAccessApiModel.self, forKey: "Terminal")
    }
}

